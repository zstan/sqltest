from pyignite import Client
import sqlite3
import pyignite

client = Client()
client.connect('127.0.0.1', 10800)

exList1 = (
"CREATE TABLE TABLE_F041_03_01_011 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_03_01_012 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_03_01_011.A, TABLE_F041_03_01_012.A FROM TABLE_F041_03_01_011 LEFT JOIN TABLE_F041_03_01_012 ON TABLE_F041_03_01_011.A = TABLE_F041_03_01_012.A",
"CREATE TABLE TABLE_F041_03_01_021 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_03_01_022 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_03_01_021.A, TABLE_F041_03_01_022.A FROM TABLE_F041_03_01_021 LEFT JOIN TABLE_F041_03_01_022 USING( A )",
"CREATE TABLE TABLE_F041_03_01_031 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_03_01_032 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_03_01_031.A, TABLE_F041_03_01_032.A FROM TABLE_F041_03_01_031 LEFT JOIN TABLE_F041_03_01_032 USING( A ) AS FOO",
"CREATE TABLE TABLE_F041_03_01_041 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_03_01_042 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_03_01_041.A, TABLE_F041_03_01_042.A FROM TABLE_F041_03_01_041 LEFT OUTER JOIN TABLE_F041_03_01_042 ON TABLE_F041_03_01_041.A = TABLE_F041_03_01_042.A",
"CREATE TABLE TABLE_F041_03_01_051 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_03_01_052 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_03_01_051.A, TABLE_F041_03_01_052.A FROM TABLE_F041_03_01_051 LEFT OUTER JOIN TABLE_F041_03_01_052 USING ( A )",
"CREATE TABLE TABLE_F041_03_01_061 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_03_01_062 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_03_01_061.A, TABLE_F041_03_01_062.A FROM TABLE_F041_03_01_061 LEFT OUTER JOIN TABLE_F041_03_01_062 USING ( A ) AS FOO",
"CREATE TABLE TABLE_F041_04_01_011 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_04_01_012 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_04_01_011.A, TABLE_F041_04_01_012.A FROM TABLE_F041_04_01_011 RIGHT JOIN TABLE_F041_04_01_012 ON TABLE_F041_04_01_011.A = TABLE_F041_04_01_012.A",
"CREATE TABLE TABLE_F041_04_01_021 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_04_01_022 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_04_01_021.A, TABLE_F041_04_01_022.A FROM TABLE_F041_04_01_021 RIGHT JOIN TABLE_F041_04_01_022 USING ( A )",
"CREATE TABLE TABLE_F041_04_01_031 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_04_01_032 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"SELECT TABLE_F041_04_01_031.A, TABLE_F041_04_01_032.A FROM TABLE_F041_04_01_031 RIGHT JOIN TABLE_F041_04_01_032 USING ( A ) AS FOO",
)

exList = (

"CREATE TABLE TABLE_F041_04_01_011 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"CREATE TABLE TABLE_F041_04_01_012 ( A INTEGER PRIMARY KEY, CC INTEGER  )",
"EXPLAIN PLAN FOR SELECT TABLE_F041_04_01_011.A, TABLE_F041_04_01_012.A FROM TABLE_F041_04_01_011 RIGHT JOIN TABLE_F041_04_01_012 ON TABLE_F041_04_01_011.A = TABLE_F041_04_01_012.A",
"SELECT TABLE_F041_04_01_011.A, TABLE_F041_04_01_012.A FROM TABLE_F041_04_01_011 RIGHT JOIN TABLE_F041_04_01_012 ON TABLE_F041_04_01_011.A = TABLE_F041_04_01_012.A",
)

def run_test(sql):
    error = None
    try:
        res = client.sql(sql)
        for r in res:
            print (r)

        print ('done')
    except pyignite.exceptions.SQLError as e:
        error = e
    except pyignite.exceptions.ParseError as e1:
        print (e1)
        client.connect('127.0.0.1', 10800)

    return error

if __name__== "__main__":
    for s in exList:
        print (run_test(s))
